basePath: /api/v1
definitions:
  user.User:
    properties:
      email:
        type: string
      id:
        type: string
      password:
        type: string
      status:
        type: boolean
    type: object
host: localhost:8080
info:
  contact:
    email: slm092013@gmail.com
    name: Sergio Lorenzo
    url: https://www.linkedin.com/in/sergiolorenzo/
  description: User API built using Go and Gin with DDD. You can visit the GitHub
    repository at https://userapi-ddd-go
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: User API
  version: "1.0"
paths:
  /user:
    get:
      operationId: get-all-users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
      summary: get all users
    post:
      operationId: create-user
      parameters:
      - description: user data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/user.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            type: object
      summary: add a new user to the user list
  /user/{id}:
    get:
      operationId: get-user-by-id
      parameters:
      - description: user ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "404":
          description: Not Found
          schema:
            type: object
      summary: get a user record by ID
swagger: "2.0"
